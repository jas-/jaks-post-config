#!/bin/bash

# Default path/file for sysctl.conf
file=/etc/sysctl.conf

# Array of key / value options for sysctl
# For a complete list please consult man(5) sysctl.conf & sysctl -a
declare -A sysctl
sysctl[kernel.exec-shield]=1
sysctl[kernel.randomize_va_space]=2
sysctl[kernel.core_pattern]='/var/core/%e.%p.core'
sysctl[net.ipv4.ip_forward]=0
sysctl[net.ipv4.conf.all.send_redirects]=0
sysctl[net.ipv4.conf.default.send_redirects]=0
sysctl[net.ipv4.conf.all.accept_source_route]=0
sysctl[net.ipv4.conf.default.accept_source_route]=0
sysctl[net.ipv4.conf.all.accept_redirects]=0
sysctl[net.ipv4.conf.default.accept_redirects]=0
sysctl[net.ipv4.conf.all.secure_redirects]=0
sysctl[net.ipv4.conf.default.secure_redirects]=0
sysctl[net.ipv4.icmp_echo_ignore_broadcasts]=1
sysctl[net.ipv4.tcp_syncookies]=1
sysctl[net.ipv4.conf.all.rp_filter]=1
sysctl[net.ipv4.conf.default.rp_filter]=1
sysctl[net.ipv4.conf.all.log_martians]=1

# Get our current working directory
cwd=$(dirname ${BASH_SOURCE[0]})

# Setup a path for binary tools (just in case)
PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

# Make sure our common libraries are available
if [ ! -f "${cwd}/libs/common" ] ; then
  echo "${prog}: Could not load libraries"
  exit 1
fi

# Load our libs
source ${cwd}/libs/common

# Displays available arg list
usage()
{
  cat <<EOF
Usage $0 [options]

Manage sysctl options

  Help:
    -h  Show this message
    -v  Enable verbosity mode

  Required:
    -a  Author name (required)

  Options:
    -f  Array of files to use

  Validation:
    -c  Perform validation of change

  Restoration options:
    -r  Perform rollback of changes
    -i  Interactive mode, to be used with -r

  Development mode:
    -t  Run in test mode (assumes test env)

EOF
}

config_sysctl()
{
  # Error array
  errors=()

  # Global info array
  info=()

  # Use test suite if enabled
  if [ "${test}" == 1 ] ; then
    file=$(create_test "${cwd}/test/originals/$(basename ${file})")
    if [ $? != 0 ] ; then
      errors+=("ERROR: Error working with test env")
      echo "${errors[@]}" && return 1
    fi
  fi

  # Test for presence of file
  if [ ! -f ${file} ]; then
    errors+=("ERROR: File specified was not found,")
    echo "${errors[@]}" && return 1
  fi

  # Perform restoration if specified
  if [ "${restore}" == 1 ] ; then

    info+=("$(restore "${file}")")

    # Check results & return if an error occured
    if [ $? != 0 ]; then
      echo "${info[@]}" && return 1
    fi

    # Everything passed, return 0
    echo "${info[@]}" && return 0
  fi

  # Backup file if we are making changes
  if [[ "${check}" == 0 ]] && [[ "${restore}" == 0 ]] ; then

    info+=("$(backup "${file}" "${author}")")

    # Check results & return if an error occured
    if [ $? != 0 ]; then
      echo "${info[@]}" && return 1
    fi
  fi

  # Iterate ${sysctl[@]} and apply changes
  for item in "${!sysctl[@]}"; do

    if [ "${check}" == 0 ] ; then
      info+=("INFO: Setting option ${item} to ${sysctl[$item]},")
      str_replace "${file}" "^${item}" "${item} = ${sysctl[$item]}"
    fi

    info+=("INFO: Validating ${item} = ${sysctl[${item}]},")
    chk=$(grep "^${item}.*${sysctl[$item]}" ${file})
    if [ "${chk}" == "" ] ; then
      errors+=("ERROR: Unable to validate ${item} = ${sysctl[${item}]},")
    fi
  done

  # Return errors
  if [ "${#errors[@]}" != 0 ] ; then
    errors+=("${info[@]}")
    echo "${errors[@]}" && return 1
  fi

  # Expose information array
  echo "${info[@]}"

  # Return code
  return 0
}

# Global options
verbose=0
check=0
restore=0
test=0
interactive=0
prog=$(basename $0)

# Ensure we have permissions
if [ $UID != 0 ] ; then
  echo "${prog}: Requires root privileges"
  exit 1
fi

# Set variables
while getopts "ha:vcrtif:o:m:" OPTION ; do
  case $OPTION in
    h) usage && exit 1 ;;
    a) author=$OPTARG ;;
    f) file=$OPTARG ;;
    v) verbose=1 ;;
    c) check=1 ;;
    r) restore=1 ;;
    t) test=1 ;;
    i) interactive=1 ;;
    ?) usage && exit 1 ;;
  esac
done

# Make sure we have an author if we are not restoring or validating
if [[ "${author}" == "" ]] && [[ "${restore}" == 0 ]] && [[ "${check}" == 0 ]]; then
  echo "${prog}: Must specify an author name (use -a <initials>)"
  usage
  exit 1
fi

# Robot, do work
main "config_sysctl"
